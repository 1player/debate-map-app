# todo: get certificate provisioning working again
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GatewayClass
metadata:
  name: my-gateway-class
spec:
  controllerName: traefik.io/gateway-controller
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: my-gateway
  #annotations:
  #  cert-manager.io/cluster-issuer: ssl-prod
spec:
  gatewayClassName: my-gateway-class
  # cert-manager is picky about the values of these fields; reference this before making changes: https://cert-manager.io/docs/usage/gateway
  listeners:
    - name: http
      hostname: 9m2x1z.nodes.c1.or1.k8s.ovh.us
      protocol: HTTP
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: my-gateway-https
  annotations:
    cert-manager.io/cluster-issuer: ssl-prod
spec:
  gatewayClassName: my-gateway-class
  # cert-manager is picky about the values of these fields; reference this before making changes: https://cert-manager.io/docs/usage/gateway
  listeners:
    - name: https-1
      hostname: 9m2x1z.nodes.c1.or1.k8s.ovh.us
      protocol: HTTPS
      port: 443
      tls:
        mode: Terminate
        certificateRefs:
          #- {name: zerossl-key-prod4, kind: Secret, group: core, namespace: cert-manager}
          - {name: zerossl-key-prod4, kind: Secret, group: core}
    # commented for now; I think what's happening is that you can't use a wildcard "hostname" if your only challenge-solver is of type "http-01"
    # - name: https-2
    #   hostname: "*.9m2x1z.nodes.c1.or1.k8s.ovh.us"
    #   protocol: HTTPS
    #   port: 443
    #   tls:
    #     mode: Terminate
    #     certificateRefs:
    #       - {name: zerossl-key-prod4, kind: Secret, group: core}
    # - name: https-3
    #   hostname: debating.app
    #   protocol: HTTPS
    #   port: 443
    #   tls:
    #     mode: Terminate
    #     certificateRefs:
    #       - {name: zerossl-key-prod4, kind: Secret, group: core}
    # # - name: https-4
    # #   hostname: "*.debating.app"
    # #   protocol: HTTPS
    # #   port: 443
    # #   tls:
    # #     mode: Terminate
    # #     certificateRefs:
    # #       - {name: zerossl-key-prod4, kind: Secret, group: core}
    # - name: https-5
    #   hostname: debates.app
    #   protocol: HTTPS
    #   port: 443
    #   tls:
    #     mode: Terminate
    #     certificateRefs:
    #       - {name: zerossl-key-prod4, kind: Secret, group: core}
    # # - name: https-6
    # #   hostname: "*.debates.app"
    # #   protocol: HTTPS
    # #   port: 443
    # #   tls:
    # #     mode: Terminate
    # #     certificateRefs:
    # #       - {name: zerossl-key-prod4, kind: Secret, group: core}
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: route-web-server
  namespace: default
spec:
  parentRefs:
    - name: my-gateway
    - name: my-gateway-https
  hostnames:
  - "9m2x1z.nodes.c1.or1.k8s.ovh.us"
  - "debating.app"
  - "debates.app"
  rules:
    -
      # matches:
      #   - path:
      #       #type: Exact
      #       # match all paths, except for those starting with "/.well-known" (since that signifies an ACME certificate-challenge solver request, which will break if handled by this route)
      #       type: RegularExpression
      #       #value: "^(?!/.well-known)"
      #       #value: "^(?!/\\.well-known)"
      #       value: "/[a-zA-Z0-9_-]" # basically, match everything except a path that starts with "/." (see above)
      # matches:
      #   - path:
      #       type: Exact
      #       value: "/test1"
      backendRefs:
        - name: dm-web-server
          port: 5100
# ---
# apiVersion: gateway.networking.k8s.io/v1alpha2
# kind: HTTPRoute
# metadata:
#   name: route-app-server
#   namespace: default
# spec:
#   parentRefs:
#     - name: my-gateway
#   hostnames:
#   - "app-server.9m2x1z.nodes.c1.or1.k8s.ovh.us"
#   - "app-server.debating.app"
#   - "app-server.debates.app"
#   rules:
#     - backendRefs:
#       - name: dm-app-server-rs
#         port: 5110
# ---
# apiVersion: gateway.networking.k8s.io/v1alpha2
# kind: HTTPRoute
# metadata:
#   name: route-app-server-js
#   namespace: default
# spec:
#   parentRefs:
#     - name: my-gateway
#   hostnames:
#   - "app-server-js.9m2x1z.nodes.c1.or1.k8s.ovh.us"
#   - "app-server-js.debating.app"
#   - "app-server-js.debates.app"
#   rules:
#     - backendRefs:
#       - name: dm-app-server-js
#         port: 5115
# ---
# apiVersion: gateway.networking.k8s.io/v1alpha2
# kind: HTTPRoute
# metadata:
#   name: route-monitor
#   namespace: default
# spec:
#   parentRefs:
#     - name: my-gateway
#   hostnames:
#   - "monitor.9m2x1z.nodes.c1.or1.k8s.ovh.us"
#   - "monitor.debating.app"
#   - "monitor.debates.app"
#   rules:
#     - backendRefs:
#       - name: dm-monitor-backend
#         port: 5130