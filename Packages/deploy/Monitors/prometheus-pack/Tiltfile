def ToLPath(path):
	return path.replace("\\", "/").replace("C:/", "/mnt/c/")
def ToWPath(path):
	return path.replace("/", "\\").replace("\\mnt\\c\\", "C:\\")
	
def ListDir(path, recursive = False):
	return [ToLPath(file) for file in listdir(ToWPath(path), recursive)]
def PathExists(path):
	return os.path.exists(ToWPath(path))
def PathJoin(path1, path2):
	return ToLPath(os.path.join(ToWPath(path1), ToWPath(path2)))
def AbsPath(path):
	return ToLPath(os.path.abspath(ToWPath(path)))
def DirName(path):
	return ToLPath(os.path.dirname(ToWPath(path)))
def BaseName(path):
	return ToLPath(os.path.basename(ToWPath(path)))

setupManifests = [doc for doc in ListDir(".", recursive=True) if doc.endswith(".yaml")]

def name(c):
	return c['metadata']['name']

#k8s_yaml([ToWPath(a) for a in setupManifests])
def install():
	# for testing
	#k8s_yaml(".\\base\\setup\\prometheus-operator-0alertmanagerConfigCustomResourceDefinition.yaml")

	k8s_yaml([ToWPath(a) for a in setupManifests])
	for file in setupManifests:
		print("Added:", file)

	'''docs = []
	for file in setupManifests:
		doc = read_yaml(ToWPath(file))
		if 'metadata' in doc and 'name' in doc['metadata']:
			docs.append(doc)

	k8s_resource(
		new_name='prometheus-crds',
		objects = [('%s' % name(c)) for c in docs],
		resource_deps=['prometheus-operator'],
	)'''